+function(c){var b=function(h,f){var g=this.$el=c(h);this.options=f||{};if(this.options.triggerCondition===false){throw new Error("Trigger condition is not specified.")}if(this.options.trigger===false){throw new Error("Trigger selector is not specified.")}if(this.options.triggerAction===false){throw new Error("Trigger action is not specified.")}this.triggerCondition=this.options.triggerCondition;if(this.options.triggerCondition.indexOf("value")==0){var e=this.options.triggerCondition.match(/[^[\]]+(?=])/g);this.triggerCondition="value";this.triggerConditionValue=(e)?e:[""]}this.triggerParent=this.options.triggerClosestParent!==undefined?g.closest(this.options.triggerClosestParent):undefined;if(this.triggerCondition=="checked"||this.triggerCondition=="unchecked"||this.triggerCondition=="value"){c(document).on("change",this.options.trigger,c.proxy(this.onConditionChanged,this))}var d=this;g.on("oc.triggerOn.update",function(i){i.stopPropagation();d.onConditionChanged()});d.onConditionChanged()};b.prototype.onConditionChanged=function(){if(this.triggerCondition=="checked"){this.updateTarget(!!c(this.options.trigger+":checked",this.triggerParent).length)}else{if(this.triggerCondition=="unchecked"){this.updateTarget(!c(this.options.trigger+":checked",this.triggerParent).length)}else{if(this.triggerCondition=="value"){var d,e="";d=c(this.options.trigger,this.triggerParent).not("input[type=checkbox], input[type=radio], input[type=button], input[type=submit]");if(!d.length){d=c(this.options.trigger,this.triggerParent).not(":not(input[type=checkbox]:checked, input[type=radio]:checked)")}if(!!d.length){e=d.val()}this.updateTarget(c.inArray(e,this.triggerConditionValue)!=-1)}}}};b.prototype.updateTarget=function(d){var e=this,f=this.options.triggerAction.split("|");c.each(f,function(g,h){e.updateTargetAction(h,d)});c(window).trigger("resize");this.$el.trigger("oc.triggerOn.afterUpdate",d)};b.prototype.updateTargetAction=function(e,d){if(e=="show"){this.$el.toggleClass("hide",!d).trigger("hide.oc.triggerapi",[!d])}else{if(e=="hide"){this.$el.toggleClass("hide",d).trigger("hide.oc.triggerapi",[d])}else{if(e=="enable"){this.$el.prop("disabled",!d).toggleClass("control-disabled",!d).trigger("disable.oc.triggerapi",[!d])}else{if(e=="disable"){this.$el.prop("disabled",d).toggleClass("control-disabled",d).trigger("disable.oc.triggerapi",[d])}else{if(e=="empty"&&d){this.$el.not("input[type=checkbox], input[type=radio], input[type=button], input[type=submit]").val("");this.$el.not(":not(input[type=checkbox], input[type=radio])").prop("checked",false);this.$el.trigger("empty.oc.triggerapi").trigger("change")}}}}}if(e=="show"||e=="hide"){this.fixButtonClasses()}};b.prototype.fixButtonClasses=function(){var d=this.$el.closest(".btn-group");if(d.length>0&&this.$el.is(":last-child")){this.$el.prev().toggleClass("last",this.$el.hasClass("hide"))}};b.DEFAULTS={triggerAction:false,triggerCondition:false,triggerClosestParent:undefined,trigger:false};var a=c.fn.triggerOn;c.fn.triggerOn=function(d){return this.each(function(){var g=c(this);var f=g.data("oc.triggerOn");var e=c.extend({},b.DEFAULTS,g.data(),typeof d=="object"&&d);if(!f){g.data("oc.triggerOn",(f=new b(this,e)))}})};c.fn.triggerOn.Constructor=b;c.fn.triggerOn.noConflict=function(){c.fn.triggerOn=a;return this};c(document).render(function(){c("[data-trigger]").triggerOn()})}(window.jQuery);