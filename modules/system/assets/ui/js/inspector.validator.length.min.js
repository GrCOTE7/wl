+function(c){var b=c.oc.inspector.validators.base,a=b.prototype;var d=function(e){b.call(this,e)};d.prototype=Object.create(a);d.prototype.constructor=b;d.prototype.isValid=function(f){if(f===undefined||f===null){return null}if(typeof f=="boolean"){this.throwError("The Length Inspector validator cannot work with Boolean values.")}var e=null;if(Object.prototype.toString.call(f)==="[object Array]"||typeof f==="string"){e=f.length}else{if(typeof f==="object"){e=this.getObjectLength(f)}}if(this.options.min!==undefined||this.options.max!==undefined){if(this.options.min!==undefined){if(this.options.min.value===undefined){throw new Error("The min.value parameter is not defined in the Length Inspector validator configuration.")}if(e<this.options.min.value){return this.options.min.message!==undefined?this.options.min.message:"The value should not be shorter than "+this.options.min.value}}if(this.options.max!==undefined){if(this.options.max.value===undefined){throw new Error("The max.value parameter is not defined in the Length Inspector validator configuration.")}if(e>this.options.max.value){return this.options.max.message!==undefined?this.options.max.message:"The value should not be longer than "+this.options.max.value}}}};d.prototype.getObjectLength=function(g){var e=0;for(var f in g){e++}return e};c.oc.inspector.validators.length=d}(window.jQuery);