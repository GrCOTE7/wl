+function(d){if(d.oc.builder===undefined){d.oc.builder={}}if(d.oc.builder.entityControllers===undefined){d.oc.builder.entityControllers={}}var c=d.oc.foundation.base,a=c.prototype;var b=function(f,e){if(f===undefined){throw new Error("The Builder entity type name should be set in the base constructor call.")}if(e===undefined){throw new Error("The Builder index controller should be set when creating an entity controller.")}this.typeName=f;this.indexController=e;c.call(this)};b.prototype=Object.create(a);b.prototype.constructor=b;b.prototype.registerHandlers=function(){};b.prototype.invokeCommand=function(f,e){if(/^cmd[a-zA-Z0-9]+$/.test(f)){if(this[f]!==undefined){this[f].apply(this,[e])}else{throw new Error("Unknown command: "+f)}}else{throw new Error("Invalid command: "+f)}};b.prototype.newTabId=function(){return this.typeName+Math.random()};b.prototype.makeTabId=function(e){return this.typeName+"-"+e};b.prototype.getMasterTabsActivePane=function(){return this.indexController.getMasterTabActivePane()};b.prototype.getMasterTabsObject=function(){return this.indexController.masterTabsObj};b.prototype.getSelectedPlugin=function(){var e=d("#PluginList-pluginList-plugin-list > ul > li.active");return e.data("id")};b.prototype.getIndexController=function(){return this.indexController};b.prototype.updateMasterTabIdAndTitle=function(e,f){var g=this.getMasterTabsObject();g.updateIdentifier(e,f.tabId);g.updateTitle(e,f.tabTitle)};b.prototype.unhideFormDeleteButton=function(e){d("[data-control=delete-button]",e).removeClass("hide")};b.prototype.forceCloseTab=function(e){e.trigger("close.oc.tab",[{force:true}])};b.prototype.unmodifyTab=function(e){this.indexController.unchangeTab(e)};d.oc.builder.entityControllers.base=b}(window.jQuery);